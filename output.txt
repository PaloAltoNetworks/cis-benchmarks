security_rules: [OrderedDict([('entry', OrderedDict([('@name', 'HS-block-quic'), ('@uuid', '20f4e740-8e49-4858-bc1f-8c51b161c33c'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'quic')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'deny'), ('description', 'blocks quic and forces use of standard ssl for web sessio\nns to help capture url values of encrypted sessions'), ('log-setting', 'default'), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('profile-setting', OrderedDict([('profiles', OrderedDict([('vulnerability', OrderedDict([('member', 'Alert-Only-VP')])), ('virus', OrderedDict([('member', 'Alert-Only-AV')]))]))])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-no-unknown-URL-xfer'), ('@uuid', 'f0098a9c-c140-46b8-a543-2c764f16770a'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Alert-Only')]))])), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'unknown')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('description', "This rule prevents the download of WF supported and risky file types from unknown category\nURL's."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-allow-outbound'), ('@uuid', '2c13678f-7246-4311-8d9d-daf23fe808f3'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('profiles', OrderedDict([('vulnerability', OrderedDict([('member', 'Exception-VP')])), ('spyware', OrderedDict([('member', 'Inbound-AS')]))]))])), ('description', 'This is a general rule to allow trust to untrust traffic. It uses application defaults to p\nrevent applications from running on non-default undefined ports. This is part of the App-ID support in the firew\nall'), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-SSL-ports'), ('@uuid', 'c972749d-b1fd-4114-bcbb-c8a16f7a972f'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'ssl')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'This is a complement to the allow-outbound rule to ensure sessions can be established and t\nhe proper application determined. Once determined, the session will shift to the allow-outbound rule.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-web-ports'), ('@uuid', 'c82b0af2-f165-4b89-b440-2dad98588672'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'web-browsing')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'Provide visibility for non-default web browsing applications. Will provide security profile\n coverage and will allow based if a non-default port for the application. VISIBILITY ONLY and not app evasion.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-find-non-def-apps'), ('@uuid', '61e4af07-6360-43a8-b93e-51c9e3a088e7'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'test_noWF')]))])), ('description', "This is a temporary safety net rule to find apps not on non-default ports. It still has the\n Gold security profile to look for threats, block bad URL's, and send files to WF."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('log-end', 'yes'), ('log-setting', 'default'), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))])]
profile_groups_with_wf_analysis: ['Outbound', 'Inbound', 'Internal', 'Alert-Only', 'default', 'Outbound-Unknown-URL', 'test']
security_rules_with_profilegroup: [OrderedDict([('entry', OrderedDict([('@name', 'HS-block-quic'), ('@uuid', '20f4e740-8e49-4858-bc1f-8c51b161c33c'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'quic')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'deny'), ('description', 'blocks quic and forces use of standard ssl for web sessio\nns to help capture url values of encrypted sessions'), ('log-setting', 'default'), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('profile-setting', OrderedDict([('profiles', OrderedDict([('vulnerability', OrderedDict([('member', 'Alert-Only-VP')])), ('virus', OrderedDict([('member', 'Alert-Only-AV')]))]))])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-no-unknown-URL-xfer'), ('@uuid', 'f0098a9c-c140-46b8-a543-2c764f16770a'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Alert-Only')]))])), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'unknown')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('description', "This rule prevents the download of WF supported and risky file types from unknown category\nURL's."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-allow-outbound'), ('@uuid', '2c13678f-7246-4311-8d9d-daf23fe808f3'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('profiles', OrderedDict([('vulnerability', OrderedDict([('member', 'Exception-VP')])), ('spyware', OrderedDict([('member', 'Inbound-AS')]))]))])), ('description', 'This is a general rule to allow trust to untrust traffic. It uses application defaults to p\nrevent applications from running on non-default undefined ports. This is part of the App-ID support in the firew\nall'), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-SSL-ports'), ('@uuid', 'c972749d-b1fd-4114-bcbb-c8a16f7a972f'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'ssl')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'This is a complement to the allow-outbound rule to ensure sessions can be established and t\nhe proper application determined. Once determined, the session will shift to the allow-outbound rule.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-web-ports'), ('@uuid', 'c82b0af2-f165-4b89-b440-2dad98588672'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'web-browsing')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'Provide visibility for non-default web browsing applications. Will provide security profile\n coverage and will allow based if a non-default port for the application. VISIBILITY ONLY and not app evasion.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-find-non-def-apps'), ('@uuid', '61e4af07-6360-43a8-b93e-51c9e3a088e7'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'test_noWF')]))])), ('description', "This is a temporary safety net rule to find apps not on non-default ports. It still has the\n Gold security profile to look for threats, block bad URL's, and send files to WF."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('log-end', 'yes'), ('log-setting', 'default'), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))])]
security_rules_profilegroup_no_wf_object: [OrderedDict([('entry', OrderedDict([('@name', 'HS-block-quic'), ('@uuid', '20f4e740-8e49-4858-bc1f-8c51b161c33c'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'quic')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'deny'), ('description', 'blocks quic and forces use of standard ssl for web sessio\nns to help capture url values of encrypted sessions'), ('log-setting', 'default'), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('profile-setting', OrderedDict([('profiles', OrderedDict([('vulnerability', OrderedDict([('member', 'Alert-Only-VP')])), ('virus', OrderedDict([('member', 'Alert-Only-AV')]))]))])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-no-unknown-URL-xfer'), ('@uuid', 'f0098a9c-c140-46b8-a543-2c764f16770a'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Alert-Only')]))])), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'unknown')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('description', "This rule prevents the download of WF supported and risky file types from unknown category\nURL's."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-allow-outbound'), ('@uuid', '2c13678f-7246-4311-8d9d-daf23fe808f3'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('profiles', OrderedDict([('vulnerability', OrderedDict([('member', 'Exception-VP')])), ('spyware', OrderedDict([('member', 'Inbound-AS')]))]))])), ('description', 'This is a general rule to allow trust to untrust traffic. It uses application defaults to p\nrevent applications from running on non-default undefined ports. This is part of the App-ID support in the firew\nall'), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-SSL-ports'), ('@uuid', 'c972749d-b1fd-4114-bcbb-c8a16f7a972f'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'ssl')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'This is a complement to the allow-outbound rule to ensure sessions can be established and t\nhe proper application determined. Once determined, the session will shift to the allow-outbound rule.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-web-ports'), ('@uuid', 'c82b0af2-f165-4b89-b440-2dad98588672'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'web-browsing')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'Provide visibility for non-default web browsing applications. Will provide security profile\n coverage and will allow based if a non-default port for the application. VISIBILITY ONLY and not app evasion.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-find-non-def-apps'), ('@uuid', '61e4af07-6360-43a8-b93e-51c9e3a088e7'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'test_noWF')]))])), ('description', "This is a temporary safety net rule to find apps not on non-default ports. It still has the\n Gold security profile to look for threats, block bad URL's, and send files to WF."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('log-end', 'yes'), ('log-setting', 'default'), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))])]
security_rules_profilegroup_no_wf: ['HS-block-quic', 'HS-no-unknown-URL-xfer', 'HS-allow-outbound', 'HS-non-def-SSL-ports', 'HS-non-def-web-ports', 'HS-find-non-def-apps']
security_rules_with_wf_profile: []
security_rules_without_wf_profile: ['HS-block-quic', 'HS-allow-outbound']
policies_with_wf_profile: {'results': False, 'label': '5.3 Ensure a WildFire Analysis profile is enabled for all security policies', 'severity': 'low', 'documentation_link': 'https://www.paloaltonetworks.com', 'test': '(\n  security_rules_profilegroup_no_wf | length == 0\n  and security_rules_without_wf_profile | length == 0\n)', 'output_message': "security rules violating this benchmark:\n['HS-block-quic', 'HS-no-unknown-URL-xfer', 'HS-allow-outbound', 'HS-non-def-SSL-ports', 'HS-non-def-web-ports', 'HS-find-non-def-apps']\n['HS-block-quic', 'HS-allow-outbound']"}
security_rules_without_av_profile: ['HS-allow-outbound']
profile_groups_with_av_analysis: ['Outbound', 'Inbound', 'Internal', 'Alert-Only', 'default', 'Outbound-Unknown-URL', 'test_noWF']
security_rules_with_profilegroup_av: [OrderedDict([('entry', OrderedDict([('@name', 'HS-no-unknown-URL-xfer'), ('@uuid', 'f0098a9c-c140-46b8-a543-2c764f16770a'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Alert-Only')]))])), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'unknown')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('description', "This rule prevents the download of WF supported and risky file types from unknown category\nURL's."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-SSL-ports'), ('@uuid', 'c972749d-b1fd-4114-bcbb-c8a16f7a972f'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'ssl')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'This is a complement to the allow-outbound rule to ensure sessions can be established and t\nhe proper application determined. Once determined, the session will shift to the allow-outbound rule.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-web-ports'), ('@uuid', 'c82b0af2-f165-4b89-b440-2dad98588672'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'web-browsing')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'Provide visibility for non-default web browsing applications. Will provide security profile\n coverage and will allow based if a non-default port for the application. VISIBILITY ONLY and not app evasion.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-find-non-def-apps'), ('@uuid', '61e4af07-6360-43a8-b93e-51c9e3a088e7'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'test_noWF')]))])), ('description', "This is a temporary safety net rule to find apps not on non-default ports. It still has the\n Gold security profile to look for threats, block bad URL's, and send files to WF."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('log-end', 'yes'), ('log-setting', 'default'), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))])]
security_rules_profilegroup_no_av_object: [OrderedDict([('entry', OrderedDict([('@name', 'HS-no-unknown-URL-xfer'), ('@uuid', 'f0098a9c-c140-46b8-a543-2c764f16770a'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Alert-Only')]))])), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'unknown')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'application-default')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('description', "This rule prevents the download of WF supported and risky file types from unknown category\nURL's."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-SSL-ports'), ('@uuid', 'c972749d-b1fd-4114-bcbb-c8a16f7a972f'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'ssl')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'This is a complement to the allow-outbound rule to ensure sessions can be established and t\nhe proper application determined. Once determined, the session will shift to the allow-outbound rule.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-non-def-web-ports'), ('@uuid', 'c82b0af2-f165-4b89-b440-2dad98588672'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'web-browsing')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('log-end', 'yes'), ('log-setting', 'default'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'Outbound')]))])), ('description', 'Provide visibility for non-default web browsing applications. Will provide security profile\n coverage and will allow based if a non-default port for the application. VISIBILITY ONLY and not app evasion.'), ('tag', OrderedDict([('member', 'HomeSkillet')]))]))]), OrderedDict([('entry', OrderedDict([('@name', 'HS-find-non-def-apps'), ('@uuid', '61e4af07-6360-43a8-b93e-51c9e3a088e7'), ('to', OrderedDict([('member', 'internet')])), ('from', OrderedDict([('member', 'internal')])), ('source', OrderedDict([('member', 'any')])), ('destination', OrderedDict([('member', 'any')])), ('source-user', OrderedDict([('member', 'any')])), ('category', OrderedDict([('member', 'any')])), ('application', OrderedDict([('member', 'any')])), ('service', OrderedDict([('member', 'any')])), ('hip-profiles', OrderedDict([('member', 'any')])), ('action', 'allow'), ('profile-setting', OrderedDict([('group', OrderedDict([('member', 'test_noWF')]))])), ('description', "This is a temporary safety net rule to find apps not on non-default ports. It still has the\n Gold security profile to look for threats, block bad URL's, and send files to WF."), ('tag', OrderedDict([('member', 'HomeSkillet')])), ('log-end', 'yes'), ('log-setting', 'default'), ('source-hip', OrderedDict([('member', 'any')])), ('destination-hip', OrderedDict([('member', 'any')]))]))])]
security_rules_profilegroup_no_av: ['HS-no-unknown-URL-xfer', 'HS-non-def-SSL-ports', 'HS-non-def-web-ports', 'HS-find-non-def-apps']
AV_profile_in_policies: {'results': False, 'label': '6.2 Ensure a secure antivirus profile is applied to all relevant security policies', 'severity': 'low', 'documentation_link': 'https://www.paloaltonetworks.com', 'test': 'security_rules_without_av_profile | length == 0', 'output_message': "security policies without a configured Antivirus profile:\n['HS-allow-outbound']"}
